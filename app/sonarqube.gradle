// noinspection is used to remove some "warnings" from Android Studio
sonarqube {
    //noinspection GroovyAssignabilityCheck
    properties {
        /* SonarQube needs to be informed about your libraries and the android.jar to understand that methods like
        * onResume() is called by the Android framework. Without that information SonarQube will very likely create warnings
        * that those methods are never used and they should be removed. Same applies for libraries where parent classes
        * are required to understand how a class works and is used. */
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/*/android.jar," +
                "build/intermediates/exploded-aar/**/classes.jar"

        property "sonar.projectName", "Friendsconnect"
        property "sonar.projectKey", "fall2016-project-davidlevitsky"
        
        property "sonar.host.url", "http://smartr.cs.hm.edu:9000"

        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java,src/main/res" // first defines where the java files are, the second where the xml files are
        property "sonar.binaries", "build/intermediates/classes/debug"
        property "sonar.libraries", libraries
        property "sonar.java.binaries", "build/intermediates/classes/debug"
        property "sonar.java.libraries", libraries

        property "sonar.tests", "src/test/java" // where the tests are located
        property "sonar.java.test.binaries", "build/intermediates/classes/debug"
        property "sonar.java.test.libraries", libraries

        // property "sonar.scm.provider", "git"

        property "sonar.jacoco.reportPath", "build/jacoco/testDebugUnitTest.exec" // path to coverage reports
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "build/test-results/debug" // path to junit reports
        property "sonar.android.lint.report", "build/outputs/lint-results-debug.xml" // path to lint reports

    }
}
